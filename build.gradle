plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'io.freefair.lombok' version '8.4'  // Lombok 플러그인 추가
}

group = 'com.coupon'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// Spring Boot Starters
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	
	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'
	
	// Database
	runtimeOnly 'com.mysql:mysql-connector-j'
	testImplementation 'com.h2database:h2'  // H2는 테스트에서만 사용
	
	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	// TestContainers Redis는 별도 모듈이 아니라 GenericContainer를 사용합니다
	
	// Swagger (SpringDoc OpenAPI)
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'
	
	// Lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	
	
	// Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testImplementation 'org.testcontainers:mysql:1.19.3'
	testImplementation 'org.testcontainers:testcontainers:1.19.3'
	testImplementation 'org.awaitility:awaitility:4.2.0'  // 비동기 테스트를 위한 라이브러리
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
	testImplementation 'org.testcontainers:mysql:1.19.3'
	testImplementation 'org.testcontainers:testcontainers:1.19.3'
}

tasks.named('test') {
	useJUnitPlatform()
}
