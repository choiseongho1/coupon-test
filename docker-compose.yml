version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: coupon-mysql
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_HOST: '%'
      TZ: Asia/Seoul
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: [
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--default-time-zone=+09:00',
      '--max_connections=1000',
      '--innodb-buffer-pool-size=512M'
    ]
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 5s
      retries: 30
      start_period: 10s

  redis:
    image: redis:7.0
    container_name: coupon-redis
    env_file:
      - .env
    environment:
      - TZ=Asia/Seoul
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server
      --requirepass "${REDIS_PASSWORD}"
      --appendonly yes
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "sh", "-c", "redis-cli -a \"${REDIS_PASSWORD}\" --no-auth-warning ping | grep -q PONG"]
      interval: 5s
      timeout: 5s
      retries: 5

  # 애플리케이션 서비스는 로컬에서 실행합니다.
  # 필요한 경우 아래 주석을 해제하세요.
  # app:
  #   build: .
  #   container_name: coupon-app
  #   ports:
  #     - "8080:8080"
  #   environment:
  #     - SPRING_PROFILES_ACTIVE=${SPRING_PROFILES_ACTIVE:-dev}
  #     - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/${MYSQL_DATABASE}?useSSL=false&allowPublicKeyRetrieval=true
  #     - SPRING_DATASOURCE_USERNAME=${MYSQL_USER}
  #     - SPRING_DATASOURCE_PASSWORD=${MYSQL_PASSWORD}
  #     - SPRING_REDIS_HOST=host.docker.internal
  #     - SPRING_REDIS_PASSWORD=${REDIS_PASSWORD:-}
  #     - JWT_SECRET=${JWT_SECRET}
  #     - JWT_VALIDITY=${JWT_VALIDITY}
  #   depends_on:
  #     mysql:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy
  #   restart: unless-stopped

volumes:
  mysql_data:
  redis_data:

# 네트워크 설정 (필요시 주석 해제)
# networks:
#   app-network:
#     driver: bridge
